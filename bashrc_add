#!/bin/bash

SC=server-config
SCONF="${HOME}/${SC}"
LOGDIR="./logs"
LOGFILE="${LOGDIR}/git.log"
[ -d "${LOGDIR}" ] || mkdir -p "${LOGDIR}"

sync_config () {
    cd  "${SCONF}"
    if which git >/dev/null; then
        echo -n "Sync config with git: " 1>&2
    	#git pull > /dev/null 2>&1
        ./bin/git-checkout.sh || nok="not" 2>"${LOGFILE}i" 1>&2 #|tee -a ./logs/git.log 1>&2   
        #echo -n synced 1>&2
        printf '%s\n' "${nok}synced" 1>&2
    else
        echo "git not installed, no configuration possible, please install git" >&2
    	#curl --request GET 'https://git.ebcont.com/jakobus.schuerz/server-config/repository/master/archive.tar.gz'
    fi
    cd ${HOME}
}

pwd
. ${SCONF}/functions.sh

if $(ping -W 1 -c 1 github.com > /dev/null 2>&1) ;then 
    if [ -d "${SCONF}" ]; then
        sync_config
        create_symlinks "$SCONF"
    else
        echo "Create Server-Config and configure git"
        git clone "https://github.com/xundeenergie/server-config.git"
        
        cd  "${SCONF}"

        # Initialize Vundle as preconfigured Submodule
        git submodule update --init --recursive

        USERNAME="jakobus.schuerz"
        FULLNAME="Jakobus SchÃ¼rz"
        
        git config user.email ${USERNAME}
        git config user.name ${FULLNAME}

        #git config push.default simple
        git remote set-url origin --add git@git.schuerz.at:/srv/repos/public/server-config.git
	


        #git config credential.helper 'store'
        
        sync_config
        
        create_symlinks "$SCONF"

        # Install vim Plugins
        #echo "Run Vim, and in Vim run :PluginInstall to install all Plugins"
        vim -c "PluginInstall" -c ":qa!"
    fi
else 
    echo github.com not reachable >&2;
    echo profile not syncing >&2;
fi

if [ -e "${SCONF}/bashrc_local" ]; then
        . "${SCONF}/bashrc_local"
fi

[ -z "$XDG_RUNTIME_DIR" ] && export XDG_RUNTIME_DIR=/run/user/$(id -u $USER)
if test $SSH_TTY && test $TERM != screen && test $(systemctl status screen@${USER} 1>/dev/null 2>&1; echo $? ) -eq 0; then
        echo Starting or resuming screen session
        echo Press CTRL+C to cancel screen startup
        echo "User: $USER - $UID"
        #systemctl --user start vnc@5901.service
        sleep 2
        screen -UxR
fi
